#abbiamo un problema con la compatibilit√† delle varie librerie
import nltk
import pandas as pd
from nltk import sent_tokenize
from transformers import pipeline

nltk.download('punkt')

detector = pipeline(task='text-classification', model='SJTU-CL/RoBERTa-large-ArguGPT-sent')

def predict_doc(doc):
    sents = sent_tokenize(doc)
    data = {'sentence': [], 'label': [], 'score': []}
    res = []
    for sent in sents:
        prob = predict_one_sent(sent)

        data['sentence'].append(sent)
        data['score'].append(round(prob, 4))
        if prob <= 0.5:
            data['label'].append('Human')
        else:
            data['label'].append('Machine')

        res.append((sent, prob))

    df = pd.DataFrame(data)
    df.to_csv('result.csv')
    overall_score = df.score.mean()
    if overall_score <= 0.5:
        overall_label = 'Human'
    else:
        overall_label = 'Machine'
    sum_str = f'The essay is probably written by {overall_label}. The probability of being generated by AI is {overall_score}'

    return sum_str, res, df, 'result.csv'


def predict_one_sent(sent):
    '''
    convert to prob 
    LABEL_1, 0.66 -> 0.66
    LABEL_0, 0.66 -> 0.34
    '''
    res = detector(sent)[0]
    org_label, prob = res['label'], res['score']
    if org_label == 'LABEL_0':
        prob = 1 - prob
    return prob

# Example usage
essay_text = input('insert text here')
summary, labeled_result, df_result, csv_filename = predict_doc(essay_text)

print(summary)
print("Labeled Result:")
for sent, prob in labeled_result:
    print(f"Sentence: {sent}, Probability: {prob}")

print("DataFrame Result:")
print(df_result)

print(f"CSV file '{csv_filename}' containing the result has been saved.")
