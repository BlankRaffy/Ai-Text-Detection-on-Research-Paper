arXiv:0704.0004v1 [math.CO] 31 Mar 2007A Determinant of Stirling Cycle Numbers Counts Unlabeled Acyclic Single-Source Automata DAVID CALLAN Department of Statistics University of Wisconsin-Madison 1300 University Ave Madison, WI 53706-1532 callan@stat.wisc.edu March 30, 2007 Abstract We show that a determinant of Stirling cycle numbers counts u nlabeled acyclic single-source automata. The proof involves a bijection fro m these automata to certain marked lattice paths and a sign-reversing involuti on to evaluate the deter- minant. 1 Introduction The chief purpose of this paper is to show bijectively that a determinant of Stirling cycle numbers counts unlabeled acyclic single -source automata. Speci cally, let Ak(n) denote the kn knmatrix with ( i,j) entry/bracketleftbig i 1 k +2 i 1 k +1+i j/bracketrightbig , where /bracketleftbigi j/bracketrightbig is the Stirling cycle number, the number of permutations on [ i] withjcycles. For example, A2(5) = 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 1 3 2 0 0 0 0 0 0 0 0 1 6 11 6 0 0 0 0 0 0 0 1 6 11 6 0 0 0 0 0 0 0 1 10 35 50 24 0 0 0 0 0 0 1 10 35 50 0 0 0 0 0 0 0 1 15 85 0 0 0 0 0 0 0 0 1 15 . 1As evident in the example, Ak(n) is formed from kcopies of each of rows 2 through n+1 of the Stirling cycle triangle, arranged so that the rst nonzero en try in each row is a 1 and, after the rst row, this 1 occurs just before the main diagon al; in other words, Ak(n) is a Hessenberg matrix with 1s on the infra-diagonal. We will show Main Theorem. The determinant of Ak(n)is the number of unlabeled acyclic single- source automata with ntransient states on a (k+1)-letter input alphabet. Section 2 reviews basic terminology for automata and recurrence r elations to count nite acyclic automata. Section 3 introduces column-marked subdia gonal paths, which play an intermediate role, and a way to code them. Section 4 present s a bijection from these column-marked subdiagonal paths to unlabeled acyclic single- source automata. Fi- nally, Section 5 evaluates det Ak(n) using a sign-reversing involution and shows that the determinant counts the codes for column-marked subdiagonal pa ths. 2 Automata A(complete, deterministic) automatonconsistsofaset ofstates andaninputalphabet whose letters transform the states among themselves: a letter a nd a state produce another state(possiblythesameone). A niteautomaton( nitesetofsta tes, niteinputalphabet of, say,kletters) canberepresented asa k-regulardirectedmultigraphwithorderededges: the vertices represent the states and the rst, second, ...ed ge from a vertex give the e ect of the rst, second, ...alphabet letter on that state. A nite au tomaton cannot be acyclic in the usual sense of no cycles: pick a vertex and follow any path fro m it. This path must ultimately hit a previously encountered vertex, thereby creating a cycle. So the term acyclic is used in the looser sense that only one vertex, called the sink, is involved in cycles. This means that all edges from the sink loop back to itself (an d may safely be omitted) and all other paths feed into the sink. A non-sink state is called transient . Thesizeof an acyclic automaton is the number of transient states. An acyclic automaton of size nthus has transient states which we label 1,2,...,nand a sink, labeled n+ 1. Liskovets [ 1] uses the inclusion-exclusion principle (more about this below) to obtain the following recurrence relation f or the number ak(n) 2of acyclic automata of size non ak-letter input alphabet ( k 1): ak(0) = 1; ak(n) =n 1/summationdisplay j=0( 1)n j 1/parenleftbiggn j/parenrightbigg (j+1)k(n j)ak(j), n 1. Asourceis a vertex with no incoming edges. A nite acyclic automaton has at lea st one source because a path traversed backward v1 v2 v3 ...must have distinct vertices and so cannot continue inde nitely. An automaton is single-source (or initially connected) if it has only one source. Let Bk(n) denote the set of single-source acyclic nite (SAF) automata on a k-letter input alphabet with vertices 1 ,2,...,n+1 where 1 is the source and n+1 is the sink, and set bk(n) =|Bk(n)|. Thetwo-line representation of an automaton in Bk(n) is the 2 knmatrix whose columns list the edges in order. For example, B=/parenleft igg 1 1 1 2 2 2 3 3 3 4 4 4 5 5 5 2 4 6 6 6 6 6 6 6 3 5 3 2 2 6/parenright igg is inB3(5) and the source-to-sink paths in Binclude 1a 2a 6,1b 4c 3a 6,1b 4b 5b 2b 6, where the alphabet is {a,b,c}. Proposition 1. The number bk(n)of SAF automata of size non ak-letter input alphabet (n,k 1)is given by bk(n) =n/summationdisplay i=1( 1)n i/parenleftbiggn 1 i 1/parenrightbigg (i+1)k(n i)ak(i) Remark This formula is a bit more succinct than the the recurrence in [ 1, Theorem 3.2]. Proof ConsiderthesetAofacyclicautomatawithtransientvertices[ n] ={1,2,...,n} in which 1 is a source. Call 2 ,3,...,ntheinteriorvertices. For X [2,n], let f(X) = # automata in Awhose set of interior vertices includes X, g(X) = # automata in Awhose set of interior vertices is precisely X. Thenf(X) =/summationtext Y:X Y [2,n]g(Y) and by M obius inversion [ 2] on the lattice of subsets of [2,n], g(X) =/summationtext Y:X Y [2,n] (X,Y)f(Y) where (X,Y) is the M obius function for this 3lattice. Since (X,Y) = ( 1)|Y| |X|ifX Y, we have in particular that g( ) =/summationdisplay Y [2,n]( 1)|Y|f(Y). (1) Let|Y|=n iso that 1 i n. When Yconsists entirely of sources, the vertices in [n+1]\Yand their incident edges form a subautomaton with itransient states; there areak(i) such. Also, all edges from the n ivertices comprising Ygo directly into [n+ 1]\Y: (i+ 1)k(n i)choices. Thus f(Y) = (i+ 1)k(n i)ak(i). By de nition, g( ) is the number of automata in Afor which 1 is the only source, that is, g( ) =bk(n) and the Proposition now follows from ( 1). Anunlabeled SAFautomatonisanequivalence classofSAFautomataunderrelabe ling of the interior vertices. Liskovets notes [ 1] (and we prove below) that Bk(n) has no nontrivial automorphisms, that is, each of the ( n 1)! relabelings of the interior vertices ofB Bk(n) produces a di erent automaton. So unlabeled SAF automata of siz enon ak-letter alphabet are counted by1 (n 1)!bk(n). The next result establishes a canonical representative in each relabeling class. Proposition 2. Each equivalence class in Bk(n)under relabeling of interior vertices has size(n 1)!and contains exactly one SAF automaton with the last occurr ences increas- ing property: the last occurrences of the interior vertice s 2,3,...,n in the bottom row of its two-line representation occur in that order. Proof The rst assertion follows from the fact that the interior vertices of an au- tomaton B bk(n)canbedistinguishedintrinsically, thatis, independentoftheirlabelin g. To see this, rst mark the source, namely 1, with a mark (new label) v1and observe that there exists at least one interior vertex whose only incoming edge(s ) are from the source (the only currently marked vertex) for otherwise a cycle would be p resent. For each such interior vertex v, choose the last edge from the marked vertex to vusing the built-in ordering of these edges. This determines an order on these vertic es; mark them in order v2,v3,...,v j(j 2). If there still remain unmarked interior vertices, at least one of them has incoming edges only from a marked vertex or again a cycle would be present. For each such vertex, use the last incoming edge from a marked vertex , where now edges are arranged in order of initial vertex viwith the built-in order breaking ties, to order and 4mark these vertices vj+1,vj+2,.... Proceed similarly until all interior vertices are marked. For example, for B=/parenleft igg 1 1 1 2 2 2 3 3 3 4 4 4 5 5 5 2 4 6 6 6 6 6 6 6 3 5 3 2 2 6/parenright igg , v1= 1 and there is just one interior vertex, namely 4, whose only incomin g edge is from the source, and so v2= 4 and 4 becomes a marked vertex. Now all incoming edges to both 3 and 5 are from marked vertices and the last such edges (built -in order comes into play) are 4b 5 and 4c 3 putting vertices 3,5 in the order 5,3. So v3= 5 and v4= 3. Finally,v5= 2. This proves the rst assertion. By construction of the vs, relabeling each interior vertex iwith the subscript of its corresponding vproduces an automaton in Bk(n) with the last occurrences increasing property and is the only rela beling that does so. The example yields /parenleft igg 1 1 1 2 2 2 3 3 3 4 4 4 5 5 5 5 2 6 4 3 4 5 5 6 6 6 6 6 6 6/parenright igg . Now letCk(n) denote the set of canonical SAF automata in Bk(n) representing un- labeled automata; thus |Ck(n)|=1 (n 1)!bk(n). Henceforth, we identify an unlabeled au- tomaton with its canonical representative. 3 Column-Marked Subdiagonal Paths Asubdiagonal (k,n,p)-path is a lattice path of steps E= (1,0) andN= (0,1),Efor east and Nfor north, from (0 ,0) to (kn,p) that never rise above the line y=1 kx. Let Ck(n,p) denote the set of such paths.For k 1, it is clear that Ck(n,p) is nonempty only for 0 p nand it is known (generalized ballot theorem) that |Ck(n,p)|=kn kp+1 kn+p+1/parenleftbiggkn+p+1 p/parenrightbigg . A pathPinCk(n,n) can be coded by the heights of its Esteps above the line y= 1; this gives a a sequence ( bi)kn i=1subject to the restrictions 1 b1 b2 ... bknand bi i/k for alli. 5Acolumn-marked subdiagonal ( k,n,p)-pathis one in which, for each i [1,kn], one of the lattice squares below the ithEstep and above the horizontal line y= 1 is marked, say with a . LetC k(n,p) denote the set of such marked paths. /Bullet /Bullet /Bullet/Bullet /Bullet /Bullet /Bullet/Bullet /Bullet /Bullet /Bullet/Bullet /Bullet/Bullet/Bullet (0,0)(8,4) y= 1y=1 2x A path in C 2(4,3) A marked path P inC k(n,n) can be coded by a sequence of pairs/parenleftbig (ai,bi)/parenrightbigkn i=1where (bi)kn i=1isthecodefortheunderlyingpath Pandai [1,bi]givesthepositionofthe inthe ith column. The example is coded by (1 ,1),(1,1),(1,2),(2,2),(1,2),(3,3),(1,3),(2,3). An explicit sum for |C k(n,n)|is |C k(n,n)|=/summationdisplay 1 b1 b2 ... bkn, bi i/k for allib1b2...bkn, becausethesummand b1b2...bknisthenumber ofways toinsert the sintheunderlying path coded by ( bi)kn i=1. It is also possible to obtain a recurrence for |C k(n,p)|, and then, using Prop. 1, to show analytically that |C k(n,n)|=|Ck+1(n)|. However, it is much more pleasant to give a bijection and in the next section we will do so. In particular, the number of SAF automata on a 2-letter alphabet is |C2(n)|=|C 1(n,n)|=/summationdisplay 1 b1 b2 ... bn bi ifor allib1b2...bn= (1,3,16,127,1363,...)n 1, 6sequence A082161 in [3]. 4 Bijection from Paths to Automata In this section we exhibit a bijection from C k(n,n) toCk+1(n). Using the illustrated path as a working example with k= 2 and n= 4, /Bullet /Bullet /Bullet/Bullet /Bullet /Bullet /Bullet/Bullet /Bullet /Bullet /Bullet/Bullet /Bullet/Bullet/Bullet (0,0)(8,4) y= 1y=1 2x rst construct the top row of a two-line representation consistin g ofk+ 1 each 1s,2s, ...,ns and number them left to right: 1 12 13 14 25 26 27 38 39 310 411 412 4 . Thelaststepinthepathisnecessarilyan Nstep. Forthesecondlast,thirdlast,... Nsteps in the path, count the number of steps following it. This gives a seque ncei1, i2,...,i n 1 satisfying 1 i1< i2< ... < i n 1andij (k+ 1)jfor allj. Circle the positions i1, i2,...,i n 1in the two-line representation and then insert (in boldface) 2 ,3,...,nin the second row in the circled positions: /circl copyrt1 12 13 14 2/circl copyrt5 26 27 38 3/circl copyrt9 310 411 412 4 2 3 4 . These will be the last occurrences of 2 ,3,...,nin the second row. Working from the last column in the path back to the rst, ll in the blanks in the second row left to right as follows. Count the number of squares from the up to the path (including the square) 7and add this number to the nearest boldface number to the left of t he current blank entry (if there are no boldface numbers to the left, add this number to 1) and insert the result in the current blank square. In the example the numbers of square s are 2,3,1,2,1,2,1,1 yielding /circl copyrt1 12 13 14 2/circl copyrt5 26 27 38 3/circl copyrt9 310 411 412 4 24 5 3 35 4 5 45 5 . This will ll all blank entries except the last. Note that s in the bottom row correspond to sink (that is, n+1) labels in the second row. Finally, insert n+1 into the last remaining blank space to give the image automaton: /parenleft igg 1 1 1 2 2 2 3 3 3 4 4 4 2 4 5 3 3 5 4 5 4 5 5 5/parenright igg . This process is fully reversible and the map is a bijection. 5 Evaluation of detA k(n) For simplicity, we treat the case k= 1, leaving the generalization to arbitrary k as a not-too-di cult exercise for the interested reader. Write A(n) forA1(n). Thus A(n) =/parenleft ig/bracketleftbigi+1 2i j/bracketrightbig/parenright ig 1 i,j n. From the de nition of det A(n) as a sum of signed products, we show that det A(n) is the total weight of certain lists of permutations, each list carry ing weight 1. Then a weight-reversing involution cancels all 1 weights and reduces the problem to counting the surviving lists. These surviving lists are esse ntially the codes for paths in C 1(n,p), and the Main Theorem follows from 4. To describe the permutations giving a nonzero contribution to det A(n) =/summationtext sgn /producttextn i=1ai, (i), de ne the codeof a permutation on [n] to be the list c= (ci)n i=1with ci= (i) (i 1). Since the ( i,j) entry of A(n),/bracketleftbigi+1 2i j/bracketrightbig , is 0 unless j i 1, we must have (i) i 1 foralli. It iswell known that thereare2n 1such permutations, corresponding to compositions of n, with codes characterized by the following four conditions: (i) ci 0 for alli, (ii)c1 1, (iii) each ci 1 is immediately followed by ci 1 zeros in the list, (iv)/summationtextn i=1ci=n. Let us call such a list a padded composition ofn: deleting the zeros is a bijection to ordinary compositions of n. For example, (3 ,0,0,1,2,0) is a padded 8composition of 6. For a permutation with padded composition code c, the nonzero entries in cgive the cycle lengths of . Hence sgn , which is the parity of n #cycles in , is given by ( 1)#0s inc. We have det A(n) =/summationtext sgn /producttextn i=1ai, (i)=/summationtext sgn /producttextn i=1/bracketleftbigi+1 2i (i)/bracketrightbig , and so detA(n) =/summationdisplay c( 1)#0s incn/productdisplay i=1/bracketleftbiggi+1 i+1 ci/bracketrightbigg (2) where the sum is restricted to padded compositions cofnwithci ifor alli(A002083) because/bracketleftbigi+1 i+1 ci/bracketrightbig = 0 unless ci i. Henceforth, let us write all permutations in standard cycle form wh ereby the smallest entry occurs rst in each cycle and these smallest entries increase left to right. Thus, with dashes separating cycles, 154-2-36 is the standard cycle for m of the permutation (1 2 3 4 5 6 5 2 6 1 4 3). We de ne a non rst entry to be one that does not start a cycle. Thus the preceding permutation has 3 non rst entries: 5,4,6. Note that the number of non rst entries is 0 only for the identity permutation. We denote an identity p ermutation (of any size) by . By de nition of Stirling cycle number, the product in ( 2) counts lists ( i)n i=1of permu- tations where iis a permutation on [ i+1] with i+1 cicycles, equivalently, with ci i non rst entries. So de ne Lnto be the set all lists of permutations = ( i)n i=1where i is a permutation on [ i+ 1], #non rst entries in iis i, 1is the transposition (1,2), each nonidentity permutation iis immediately followed by ci 1 s where ci 1 is the number of non rst entries in i(so the total number of non rst entries is n). Assign a weight to Lnby wt( ) = ( 1)# s in . Then detA(n) =/summationdisplay Lnwt( ). We now de ne a weight-reversing involution on (most of) Ln. Given Ln, scan the list of its component permutations 1= (1,2), 2, 3,...left to right. Stop at the rst one that either (i) has more than one non rst entry, or (ii) has only one non rst entry, b say, andb >maximum non rst entry mof the next permutation in the list. Say kis the permutation where we stop. 9In case (i) decrement (i.e. decrease by 1) the number of s in the list by splitting k into two nonidentity permutations as follows. Let mbe the largest non rst entry of k and let be its predecessor. Replace kand its successor in the list (necessarily an ) by the following two permutations: rst the transposition ( ,m) and second the permutation obtained from kby erasing mfrom its cycle and turning it into a singleton. Here are two examples of this case (recall permutations are in standard cyc le form and, for clarity, singleton cycles are not shown). i123456 i12132314-253 i123456 i1213232514-23 and i123456 i12231413-24 23 i123456 i122314241323 The reader may readily check that this sends case (i) to case (ii). In case (ii), kis a transposition ( a,b) withb >maximum non rst entry mof k+1. In this case, increment the number of s in the list by combining kand k+1into a single permutation followed by an : in k+1,bis a singleton; delete this singleton and insert b immediately after ain k+1(in the same cycle). The reader may check that this reverses the result in the two examples above and, in general, sends case (ii) t o case (i). Since the map alters the number of s in the list by 1, it is clearly weight-reversing. The map fails only for lists that both consist entirely of transpositions and have t he form (a1,b1),(a2,b2), ...,(an,bn) withb1 b2 ... bn. Such lists have weight 1. Hence det A(n) is the number of lists/parenleftbig (ai,bi)/parenrightbign i=1satisfying 1 ai< bi i+1 for 1 i n, andb1 b2 ... bn. After subtracting 1 from each bi, these lists code the paths in C 1(n,n) and, using 4, detA(n) =|C 1(n,n)|=|C2(n)|. References [1] Valery A. Liskovets, Exact enumeration of acyclic deterministic a u- tomata, Disc. Appl. Math. , in press, 2006. Earlier version available at http://www.i3s.unice.fr/fpsac/FPSAC03/articles.html 10[2] J. H. van Lint and R. M. Wilson, A Course in Combinatorics, 2nd ed., C ambridge University Press, NY, 2001. [3] Neil J.Sloane (founder and maintainer), The On-Line Encycloped ia of Integer Se- quences http://www.research.att.com:80/ njas/sequences/index.html?bla nk=1 11