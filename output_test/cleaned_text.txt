7002
raM
13
]OC.htam[
1v4000.4070:viXra
A Determinant of Stirling Cycle Numbers Counts Unlabeled
Acyclic Single-Source Automata
DAVID CALLAN
Department of Statistics
University of Wisconsin-Madison
1300 University Ave
Madison, WI 53706-1532
callan@stat.wisc.edu
March 30, 2007
Abstract
We show that a determinant of Stirling cycle numbers counts unlabeled acyclic
single-source automata. The proof involves a bijection from these automata to
certain marked lattice paths and a sign-reversing involution to evaluate the deter-
minant.
1 Introduction
The chief purpose of this paper is to show bijectively that
a determinant of Stirling cycle numbers counts unlabeled acyclic single-source automata.
i1
 +2
Specifically, let A (n) denote the kn  kn matrix with (i,j) entry k , where
k i1
 +1+ij
k
i is the Stirling cycle number, the number of permutations on [i](cid:2)with j cyc(cid:3)les. For
j
example,
(cid:2) (cid:3)
1 0 0 0 0 0 0 0 0 0
 1 1 0 0 0 0 0 0 0 0 
0 1 3 2 0 0 0 0 0 0
 
 
 0 0 1 3 2 0 0 0 0 0 
 
 
 0 0 0 1 6 11 6 0 0 0 
A (5) =  .
2
 0 0 0 0 1 6 11 6 0 0 
 
 
 0 0 0 0 0 1 10 35 50 24 
 
 
0 0 0 0 0 0 1 10 35 50
 
 
 0 0 0 0 0 0 0 1 15 85 
 
 
 0 0 0 0 0 0 0 0 1 15 
 
 
1As evident in the example, A (n) is formed from k copies of each of rows 2 through n+1
k
of the Stirling cycle triangle, arranged so that the first nonzero entry in each row is a 1
and, after the first row, this 1 occurs just before the main diagonal; in other words, A (n)
k
is a Hessenberg matrix with 1s on the infra-diagonal. We will show
Main Theorem. The determinant of A (n) is the number of unlabeled acyclic single-
k
source automata with n transient states on a (k +1)-letter input alphabet.
Section 2 reviews basic terminology for automata and recurrence relations to count
finite acyclic automata. Section 3 introduces column-marked subdiagonal paths, which
play an intermediate role, and a way to code them. Section 4 presents a bijection from
these column-marked subdiagonal paths to unlabeled acyclic single-source automata. Fi-
nally, Section 5 evaluates detA (n) using a sign-reversing involution and shows that the
k
determinant counts the codes for column-marked subdiagonal paths.
2 Automata
A(complete, deterministic) automatonconsistsofaset ofstatesandaninputalphabet
whose letters transform the states among themselves: a letter and a state produce another
state(possiblythesameone). Afiniteautomaton(finitesetofstates, finiteinputalphabet
of, say, k letters) canberepresented asak-regulardirectedmultigraphwithorderededges:
the vertices represent the states and the first, second, ...edge from a vertex give the effect
of the first, second, ...alphabet letter on that state. A finite automaton cannot be acyclic
in the usual sense of no cycles: pick a vertex and follow any path from it. This path must
ultimately hit a previously encountered vertex, thereby creating a cycle. So the term
acyclic is used in the looser sense that only one vertex, called the sink, is involved in
cycles. This means that all edges from the sink loop back to itself (and may safely be
omitted) and all other paths feed into the sink.
A non-sink state is called transient. The size of an acyclic automaton is the number of
transient states. An acyclic automaton of size n thus has transient states which we label
1,2,...,n and a sink, labeled n + 1. Liskovets [1] uses the inclusion-exclusion principle
(more about this below) to obtain the following recurrence relation for the number a (n)
k
2of acyclic automata of size n on a k-letter input alphabet (k  1):
n1
n
a (0) = 1; a (n) = (1)nj1 (j +1)k(nj)a (j), n  1.
k k k
j
j=0 (cid:18) (cid:19)
X
A source is a vertex with no incoming edges. A finite acyclic automaton has at least
one source because a path traversed backward v  v  v  ... must have distinct
1 2 3
vertices and so cannot continue indefinitely. An automaton is single-source (or initially
connected) if it has only one source. Let B (n) denote the set of single-source acyclic
k
finite (SAF) automata on a k-letter input alphabet with vertices 1,2,...,n+1 where 1
is the source and n+1 is the sink, and set b (n) = |B (n)|. The two-line representation
k k
of an automaton in B (n) is the 2kn matrix whose columns list the edges in order. For
k
example,
1 1 1 2 2 2 3 3 3 4 4 4 5 5 5
B =
2 4 6 6 6 6 6 6 6 3 5 3 2 2 6 !
a a b c a b
is in B (5) and the source-to-sink paths in B include 1  2  6, 1  4  3  6, 1 
3
b b b
4  5  2  6, where the alphabet is {a,b,c}.
Proposition 1. The number b (n) of SAF automata of size n on a k-letter input alphabet
k
(n,k  1) is given by
n
n1
b (n) = (1)ni (i+1)k(ni)a (i)
k k
i1
i=1 (cid:18) (cid:19)
X
Remark This formula is a bit more succinct than the the recurrence in [1, Theorem
3.2].
Proof ConsiderthesetAofacyclicautomatawithtransientvertices[n] = {1,2,...,n}
in which 1 is a source. Call 2,3,...,n the interior vertices. For X  [2,n], let
f(X) = # automata in A whose set of interior vertices includes X,
g(X) = # automata in A whose set of interior vertices is precisely X.
Then f(X) = g(Y) and by Mobius inversion [2] on the lattice of subsets of
Y:XY[2,n]
[2,n], g(X) = (X,Y)f(Y) where (X,Y) is the Mobius function for this
P Y:XY[2,n]
P
3lattice. Since (X,Y) = (1)|Y||X| if X  Y, we have in particular that
g() = (1)|Y |f(Y). (1)
Y[2,n]
X
Let |Y | = n  i so that 1  i  n. When Y consists entirely of sources, the vertices
in [n+1]\Y and their incident edges form a subautomaton with i transient states; there
are a (i) such. Also, all edges from the n  i vertices comprising Y go directly into
k
[n + 1]\Y : (i+ 1)k(ni) choices. Thus f(Y) = (i + 1)k(ni)a (i). By definition, g() is
k
the number of automata in A for which 1 is the only source, that is, g() = b (n) and the
k
Proposition now follows from (1).
Anunlabeled SAFautomatonisanequivalence classofSAFautomataunderrelabeling
of the interior vertices. Liskovets notes [1] (and we prove below) that B (n) has no
k
nontrivial automorphisms, that is, each of the (n1)! relabelings of the interior vertices
of B  B (n) produces a different automaton. So unlabeled SAF automata of size n on
k
a k-letter alphabet are counted by 1 b (n). The next result establishes a canonical
(n1)! k
representative in each relabeling class.
Proposition 2. Each equivalence class in B (n) under relabeling of interior vertices has
k
size (n1)! and contains exactly one SAF automaton with the last occurrences increas-
ing property: the last occurrences of the interior vertices2,3,...,nin the bottom row
of its two-line representation occur in that order.
Proof The first assertion follows from the fact that the interior vertices of an au-
tomatonB  b (n)canbedistinguishedintrinsically, thatis, independentoftheirlabeling.
k
To see this, first mark the source, namely 1, with a mark (new label) v and observe that
1
there exists at least one interior vertex whose only incoming edge(s) are from the source
(the only currently marked vertex) for otherwise a cycle would be present. For each such
interior vertex v, choose the last edge from the marked vertex to v using the built-in
ordering of these edges. This determines an order on these vertices; mark them in order
v ,v ,...,v (j  2). If there still remain unmarked interior vertices, at least one of them
2 3 j
has incoming edges only from a marked vertex or again a cycle would be present. For
each such vertex, use the last incoming edge from a marked vertex, where now edges are
arranged in order of initial vertex v with the built-in order breaking ties, to order and
i
4mark these vertices v ,v ,.... Proceed similarly until all interior vertices are marked.
j+1 j+2
For example, for
1 1 1 2 2 2 3 3 3 4 4 4 5 5 5
B = ,
2 4 6 6 6 6 6 6 6 3 5 3 2 2 6 !
v = 1 and there is just one interior vertex, namely 4, whose only incoming edge is from
1
the source, and so v = 4 and 4 becomes a marked vertex. Now all incoming edges to
2
both 3 and 5 are from marked vertices and the last such edges (built-in order comes into
b c
play) are 4  5 and 4  3 putting vertices 3,5 in the order 5,3. So v = 5 and v = 3.
3 4
Finally, v = 2. This proves the first assertion. By construction of the vs, relabeling each
5
interior vertex i with the subscript of its corresponding v produces an automaton in B (n)
k
with the last occurrences increasing property and is the only relabeling that does so.
The example yields
1 1 1 2 2 2 3 3 3 4 4 4 5 5 5
.
5 2 6 4 3 4 5 5 6 6 6 6 6 6 6 !
Now let C (n) denote the set of canonical SAF automata in B (n) representing un-
k k
labeled automata; thus |C (n)| = 1 b (n). Henceforth, we identify an unlabeled au-
k (n1)! k
tomaton with its canonical representative.
3 Column-Marked Subdiagonal Paths
A subdiagonal (k,n,p)-path is a lattice path of steps E = (1,0) and N = (0,1), E for
east and N for north, from (0,0) to (kn,p) that never rise above the line y = 1x. Let
k
C (n,p) denote the set of such paths.For k  1, it is clear that C (n,p) is nonempty only
k k
for 0  p  n and it is known (generalized ballot theorem) that
knkp+1 kn+p+1
|C (n,p)| = .
k
kn+p+1 p
(cid:18) (cid:19)
A path P in C (n,n) can be coded by the heights of its E steps above the line y = 1;
k
this gives a a sequence (b )kn subject to the restrictions 1  b  b  ...  b and
i i=1 1 2 kn
b  i/k for all i.
i
5A column-marked subdiagonal (k,n,p)-pathis one in which, for each i  [1,kn], one of
the lattice squares below the ith E step and above the horizontal line y = 1 is marked,
say with a . Let
C
(n,p) denote the set of such marked paths.
k
(8,4)
b
b b
y = 1 2x b b b b b

b b b b
 
(0,0)
b b b
    
y =1
A path in
C
(4,3)
2
A marked path P in C (n,n) can be coded by a sequence of pairs (a ,b ) kn where
k i i i=1
(b )kn isthecodefortheunderlyingpathP anda  [1,b ]givesthepositionoftheinthe
i i=1 i i (cid:0) (cid:1)
ith column. The example is coded by (1,1), (1,1), (1,2), (2,2), (1,2),(3,3), (1,3), (2,3).
An explicit sum for
|C
(n,n)| is
k
|C
(n,n)| = b b ...b ,
k 1 2 kn
1b1b X2...bkn,
bii/kforalli
becausethesummandb b ...b isthenumber ofways toinsert thesintheunderlying
1 2 kn
path coded by (b )kn .
i i=1
It is also possible to obtain a recurrence for
|C
(n,p)|, and then, using Prop. 1, to
k
show analytically that
|C
(n,n)| = |C (n)|. However, it is much more pleasant to
k k+1
give a bijection and in the next section we will do so. In particular, the number of SAF
automata on a 2-letter alphabet is
|C (n)| =
|C
(n,n)| = b b ...b = (1,3,16,127,1363,...) ,
2 1 1 2 n n1
1b1 Xb2...bn
biiforalli
6sequence A082161 in [3].
4 Bijection from Paths to Automata
In this section we exhibit a bijection from
C
(n,n) to C (n). Using the illustrated
k k+1
path as a working example with k = 2 and n = 4,
(8,4)
b
b b
y = 1 2x b b b b b

b b b b
 
(0,0)
b b b
    
y =1
first construct the top row of a two-line representation consisting of k + 1 each 1s,2s,
...,ns and number them left to right:
1 2 3 4 5 6 7 8 9 10 11 12
1 1 1 2 2 2 3 3 3 4 4 4
.
 
 
ThelaststepinthepathisnecessarilyanN step. Forthesecondlast,thirdlast,...N steps
in the path, count the number of steps following it. This gives a sequence i , i ,...,i
1 2 n1
satisfying 1  i < i < ... < i and i  (k + 1)j for all j. Circle the positions
1 2 n1 j
i , i ,...,i in the two-line representation and then insert (in boldface) 2,3,...,n in
1 2 n1
the second row in the circled positions:
(cid:13)1
2 3 4
(cid:13)5
6 7 8
(cid:13)9
10 11 12
1 1 1 2 2 2 3 3 3 4 4 4
.
 
2 3 4
 
These will be the last occurrences of 2,3,...,n in the second row. Working from the last
column in the path back to the first, fill in the blanks in the second row left to right as
follows. Count the number of squares from the  up to the path (including the  square)
7and add this number to the nearest boldface number to the left of the current blank entry
(if there are no boldface numbers to the left, add this number to 1) and insert the result
in the current blank square. In the example the numbers of squares are 2,3,1,2,1,2,1,1
yielding
(cid:13)1
2 3 4
(cid:13)5
6 7 8
(cid:13)9
10 11 12
1 1 1 2 2 2 3 3 3 4 4 4
.
 
2 4 5 3 3 5 4 5 4 5 5
 
This will fill all blank entries except the last. Note that s in the bottom row correspond
to sink (that is, n+1) labels in the second row. Finally, insert n+1 into the last remaining
blank space to give the image automaton:
1 1 1 2 2 2 3 3 3 4 4 4
.
2 4 5 3 3 5 4 5 4 5 5 5 !
This process is fully reversible and the map is a bijection.
5 Evaluation of det A (n)
k
For simplicity, we treat the case k = 1, leaving the generalization to arbitrary k
as a not-too-difficult exercise for the interested reader. Write A(n) for A (n). Thus
1
A(n) = i+1 . From the definition of detA(n) as a sum of signed products, we
2ij
1i,jn
(cid:16) (cid:17)
show that(cid:2)det(cid:3)A(n) is the total weight of certain lists of permutations, each list carrying
weight 1. Then a weight-reversing involution cancels all 1 weights and reduces the
problem to counting the surviving lists. These surviving lists are essentially the codes for
paths in
C
(n,p), and the Main Theorem follows from 4.
1
To describe the permutations giving a nonzero contribution to detA(n) = sgn

n a , define the code of a permutation  on [n] to be the list c = (c )n with
i=1 i,(i) Pi i=1
c = (i)(i1). Since the (i,j) entry of A(n), i+1 , is 0 unless j  i1, we must have
Qi 2ij
(i)  i1 forall i. It iswell known that thereare2n1 such permutations, corresponding
(cid:2) (cid:3)
to compositions of n, with codes characterized by the following four conditions: (i) c  0
i
for all i, (ii) c  1, (iii) each c  1 is immediately followed by c 1 zeros in the list,
1 i i
(iv) n c = n. Let us call such a list a padded composition of n: deleting the zeros
i=1 i
is a bijection to ordinary compositions of n. For example, (3,0,0,1,2,0) is a padded
P
8composition of 6. For a permutation  with padded composition code c, the nonzero
entries in c give the cycle lengths of . Hence sgn, which is the parity of n#cycles
in , is given by
(1)#0sinc
.
We have detA(n) = sgn n a = sgn n i+1 , and so
 i=1 i,(i)  i=1 2i(i)
P Q P Q (cid:2) (cid:3)
n
i+1
detA(n) =
(1)#0sinc
(2)
i+1c
c i=1(cid:20) i(cid:21)
X Y
where the sum is restricted to padded compositions c of n with c  i for all i (A002083)
i
because i+1 = 0 unless c  i.
i+1ci i
(cid:2) (cid:3)
Henceforth, let us write all permutations in standard cycle form whereby the smallest
entry occurs first in each cycle and these smallest entries increase left to right. Thus,
with dashes separating cycles, 154-2-36 is the standard cycle form of the permutation
(1 2 3 4 5 6). We define a nonfirst entry to be one that does not start a cycle. Thus the
5 2 6 1 4 3
preceding permutation has 3 nonfirst entries: 5,4,6. Note that the number of nonfirst
entries is 0 only for the identity permutation. We denote an identity permutation (of any
size) by .
By definition of Stirling cycle number, the product in (2) counts lists ( )n of permu-
i i=1
tations where  is a permutation on [i+1] with i+1c cycles, equivalently, with c  i
i i i
nonfirst entries. So define L to be the set all lists of permutations  = ( )n where 
n i i=1 i
is a permutation on [i+ 1], #nonfirst entries in  is  i,  is the transposition (1,2),
i 1
each nonidentity permutation  is immediately followed by c 1 s where c  1 is the
i i i
number of nonfirst entries in  (so the total number of nonfirst entries is n). Assign a
i
weight to   L by wt() = (1)#sin. Then
n
detA(n) = wt().
Ln
X
We now define a weight-reversing involution on (most of) L . Given   L , scan the
n n
list of its component permutations  = (1,2), , ,... left to right. Stop at the first
1 2 3
one that either (i) has more than one nonfirst entry, or (ii) has only one nonfirst entry, b
say, and b > maximum nonfirst entry m of the next permutation in the list. Say  is the
k
permutation where we stop.
9In case (i) decrement (i.e. decrease by 1) the number of s in the list by splitting 
k
into two nonidentity permutations as follows. Let m be the largest nonfirst entry of 
k
and let  be its predecessor. Replace  and its successor in the list (necessarily an ) by
k
the following two permutations: first the transposition (,m) and second the permutation
obtained from  by erasing m from its cycle and turning it into a singleton. Here are
k
two examples of this case (recall permutations are in standard cycle form and, for clarity,
singleton cycles are not shown).
i 1 2 3 4 5 6 i 1 2 3 4 5 6

 12 13 23 14-253    12 13 23 25 14-23 
i i
and
i 1 2 3 4 5 6 i 1 2 3 4 5 6

 12 23 14 13-24  23  12 23 14 24 13 23
i i
The reader may readily check that this sends case (i) to case (ii).
In case (ii),  is a transposition (a,b) with b > maximum nonfirst entry m of  . In
k k+1
this case, increment the number of s in the list by combining  and  into a single
k k+1
permutation followed by an : in  ,b is a singleton; delete this singleton and insert b
k+1
immediately after a in  (in the same cycle). The reader may check that this reverses
k+1
the result in the two examples above and, in general, sends case (ii) to case (i). Since the
map alters the number of s in the list by 1, it is clearly weight-reversing. The map fails
only for lists that both consist entirely of transpositions and have the form
(a ,b ), (a ,b ), ..., (a ,b ) with b  b  ...  b .
1 1 2 2 n n 1 2 n
n
Such lists have weight 1. Hence detA(n) is the number of lists (a ,b ) satisfying
i i i=1
1  a < b  i+1 for 1  i  n, and b  b  ...  b . After subtracting 1 from each
i i 1 2 n (cid:0) (cid:1)
b , these lists code the paths in
C
(n,n) and, using 4, detA(n) =
|C
(n,n)| = |C (n)|.
i 1 1 2
References
[1] Valery A. Liskovets, Exact enumeration of acyclic deterministic au-
tomata, Disc. Appl. Math., in press, 2006. Earlier version available at
http://www.i3s.unice.fr/fpsac/FPSAC03/articles.html
10[2] J. H. van Lint and R. M. Wilson, A Course in Combinatorics, 2nd ed., Cambridge
University Press, NY, 2001.
[3] Neil J.Sloane (founder and maintainer), The On-Line Encyclopedia of Integer Se-
quences http://www.research.att.com:80/ njas/sequences/index.html?blank=1
11